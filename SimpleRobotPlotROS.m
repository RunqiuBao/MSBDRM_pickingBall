function [ Xout ] = SimpleRobotPlotROS( u )
%SIMPLEROBOTPLOT Summary of this function goes here
persistent  jointpub jointmsg counter tftree tfStampedMsg tfStampedMsg1 tfStampedMsg2 tfStampedMsg3
persistent  tfStampedMsgcm1 tfStampedMsgcm2 tfStampedMsgcm3

%Joint Position
q1=u(1);
q2=u(2);
q3=u(3);

%Joint Velocity
qp1=u(4);
qp2=u(5);
qp3=u(6);

%Kinematic Parameters
L1=u(7);
L2=u(8);
L4=u(9);
L6=u(10);
L7=u(11);
L9=u(12);
L3=u(13);
L5=u(14);
L8=u(15);
L10=u(16);

%Time
t=u(x);


% Specify the Robot Base (with respect to the world coordinate frame in ROS)
T0_W=eye(4);

% Compute the Homogeneous Transformations

T1_0=[ cos(q1), 0,  sin(q1),  0;
       sin(q1), 0, -cos(q1),  0;
             0, 1,        0, L1;
             0, 0,        0,  1];

T2_1=[  sin(q2), -cos(q2),  0,  L3*sin(q2);
	   -cos(q2), -sin(q2),  0, -L3*cos(q2);
              0,        0, -1,          L7;
              0,        0,  0,           1];

T3_2=[  sin(q3), 0, -cos(q3),        0;
       -cos(q3), 0, -sin(q3),        0;
              0, 1,        0, L7 - L11;
              0, 0,        0,        1];

Tcm1_0=[ cos(q1), -sin(q1), 0,  0;
         sin(q1),  cos(q1), 0,  0;
               0,        0, 1, L6;
               0,        0, 0,  1];

Tcm2_1= [  sin(q2), cos(q2), 0,  L8*sin(q2);
          -cos(q2), sin(q2), 0, -L8*cos(q2);
                 0,       0, 1,          L7;
                 0,       0, 0,           1];

Tcm3_2=[ cos(q3), -sin(q3), 0,   L10*cos(q3);
         sin(q3),  cos(q3), 0,   L10*sin(q3);
               0,        0, 1, L7 - L9 - L11;
               0,        0, 0,             1];

% Stack of Transformations

T2_0=T1_0*T2_1;
T3_0=T2_0*T3_2;

Tcm2_0=T1_0*Tcm2_1;
Tcm3_0=T2_0*Tcm3_2;

T1_W=T0_W*T1_0;
T2_W=T0_W*T2_0;
T3_W=T0_W*T3_0;

Tcm1_W=T0_W*Tcm1_0;
Tcm2_W=T0_W*Tcm2_0;
Tcm3_W=T0_W*Tcm3_0;

% Get the position of the end-effector
Xef_W=[T3_W(1:3,4);R2EulerA(T3_W(1:3,1:3))];

%% Initialize the publishers and messages
if u==0
    % TF publisher
    tftree = rostf;
    tfStampedMsg = rosmessage('geometry_msgs/TransformStamped');
    tfStampedMsg1 = rosmessage('geometry_msgs/TransformStamped');
    tfStampedMsg2 = rosmessage('geometry_msgs/TransformStamped');
    tfStampedMsg3 = rosmessage('geometry_msgs/TransformStamped');
    tfStampedMsgcm1 = rosmessage('geometry_msgs/TransformStamped');
    tfStampedMsgcm2 = rosmessage('geometry_msgs/TransformStamped');
    tfStampedMsgcm3 = rosmessage('geometry_msgs/TransformStamped');
    
    % Joint State Publisher
    
end


%Publish the robot joints and tf's (Base, Links, CMs and EF), see the joint names generated by bringUR10.launch




%%
% Output: vector [Xef] (size 3X1)
Xout=[Xef_W(1:3)];




end